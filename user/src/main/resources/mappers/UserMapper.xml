<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bsm.oa.user.dao.UserRepository">

  <resultMap id="UserResultMap" type="com.bsm.oa.common.model.User">
    <result property="userId" column="user_id" typeHandler="com.bsm.oa.common.mapper.StringVOHandler"/>
    <result property="username" column="username" typeHandler="com.bsm.oa.common.mapper.StringVOHandler"/>
    <result property="imageUrl" column="image_url" typeHandler="com.bsm.oa.common.mapper.StringVOHandler"/>
    <result property="teamId" column="team_id" typeHandler="com.bsm.oa.common.mapper.StringVOHandler"/>
    <result property="email" column="email"/>
  </resultMap>

  <resultMap id="TeamResultMap" type="com.bsm.oa.common.model.Team">
    <result property="teamId" column="team_id" typeHandler="com.bsm.oa.common.mapper.StringVOHandler"/>
    <result property="displayName" column="team_name"/>
    <result property="color" column="team_color" typeHandler="com.bsm.oa.common.mapper.StringVOHandler"/>
  </resultMap>

  <insert id="insertUser" parameterType="com.bsm.oa.common.model.User">
       insert into USERS (user_id, username, email, image_url)
              values(#{userId.value}, #{username.value}, #{email}, #{imageUrl.value});
     </insert>

  <select id="userExists" parameterType="string" resultType="boolean">
        select exists (
          select 1 from USERS
            where user_id = #{userId.value}
        )
   </select>

  <select id="teamExists" parameterType="string" resultType="boolean">
        select exists (
          select 1 from team
            where team_id = #{value}
        )
   </select>

  <select id="getTeam" resultMap="TeamResultMap">
    select team_id, team_name, team_color from team where team_id = #{value}
  </select>

  <select id="getPrivileges" resultType="com.bsm.oa.common.constant.Privilege">
        select privilege_id from PRIVILEGE where user_id = #{userId.value}
    </select>

  <update id="addPrivileges">
    <foreach collection="privileges" item="privilege" index="index" open="" separator=";" close="">
      insert into PRIVILEGE (user_id, privilege_id)
      select #{userId.value}, #{privilege}
      where not exists (
      select 1 from PRIVILEGE
      where user_id = #{userId.value}
      and privilege_id = #{privilege}
      )
    </foreach>
  </update>

  <delete id="clearPrivileges">
      delete from PRIVILEGE
      where user_id = #{userId.value}
  </delete>

  <select id="getTeammates" resultMap="UserResultMap">
    select user_id, username, email, image_url, team_id from users
      where team_id = (select team_id from users where user_id = #{userId.value})
  </select>
</mapper>
